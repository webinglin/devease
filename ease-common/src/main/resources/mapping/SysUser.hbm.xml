<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

    <class name="com.piedra.platease.model.system.User" table="sys_user" schema="platease">
        <id name="id">
            <column name="ID" sql-type="char(32)" length="32"/>
        </id>
        <property name="userName">
            <column name="USER_NAME" sql-type="varchar(255)"/>
        </property>
        <property name="idcard">
            <column name="IDCARD" sql-type="varchar(32)" length="32"/>
        </property>
        <property name="realName">
            <column name="REAL_NAME" sql-type="varchar(255)"/>
        </property>
        <property name="password">
            <column name="PASSWORD" sql-type="varchar(255)"/>
        </property>
        <property name="salt">
            <column name="SALT" sql-type="varchar(8)"/>
        </property>
        <property name="deptId">
            <column name="DEPT_ID" sql-type="char(32)" length="32"/>
        </property>
        <property name="deptCode">
            <column name="DEPT_CODE" sql-type="char(12)" length="12"/>
        </property>
        <property name="status">
            <column name="STATUS" sql-type="tinyint(4)"/>
        </property>
        <property name="lastLoginIp">
            <column name="LAST_LOGIN_IP" sql-type="varchar(255)"/>
        </property>
        <property name="lastLoginTime">
            <column name="LAST_LOGIN_TIME" sql-type="datetime"/>
        </property>
        <property name="telphone">
            <column name="TELPHONE" sql-type="varchar(32)" length="32"/>
        </property>
        <property name="homeBgurl">
            <column name="HOME_BGURL" sql-type="varchar(255)"/>
        </property>
        <property name="creatorId">
            <column name="CREATOR_ID" sql-type="char(32)" length="32"/>
        </property>
        <property name="createTime">
            <column name="CREATE_TIME" sql-type="datetime"/>
        </property>
        <property name="remark">
            <column name="REMARK" sql-type="varchar(255)"/>
        </property>
    </class>


    <!-- 查询用户的角色信息 -->
    <sql-query name="SysUser.queryUserRoles">
        <return alias="r" class="com.piedra.platease.model.system.Role" />
        <![CDATA[
            SELECT r.* FROM SYS_ROLE r  JOIN SYS_USER_ROLE ur ON r.ID=ur.ROLE_ID AND ur.USER_ID=:userId
        ]]>
    </sql-query>

    <!-- 查询用户的权限信息 -->
    <sql-query name="SysUser.queryUserPermissions">
        <return alias="f" class="com.piedra.platease.model.system.Function" />
        <![CDATA[
            SELECT f.* FROM SYS_FUNCTION f
                JOIN SYS_ROLE_FUNC rf ON rf.FUNC_ID=f.ID
                JOIN SYS_USER_ROLE ur ON ur.ROLE_ID=rf.ROLE_ID AND ur.USER_ID=:userId
        ]]>
    </sql-query>

    <!-- 更新用户信息 -->
    <sql-query name="SysUser.updateUser">
        <![CDATA[
            UPDATE SYS_USER SET ID=ID
            #if($userName)
                ,USER_NAME=:userName
            #end
            #if($idcard)
                ,IDCARD=:idcard
            #end
            #if($realName)
                ,REAL_NAME=:realName
            #end
            #if($password)
                ,PASSWORD=:password
            #end
            #if($deptId)
                ,DEPT_ID=:deptId
            #end
            #if($deptCode)
                ,DEPT_CODE=:deptCode
            #end
            #if($telphone)
                ,TELPHONE=:telphone
            #end
            #if($homeBgurl)
                ,HOME_BGURL=:homeBgurl
            #end
            #if($remark)
                ,REMARK=:remark
            #end
            WHERE ID=:id
        ]]>
    </sql-query>


    <!-- 查询用户数据 -->
    <sql-query name="SysUser.queryUserList">
        <return alias="u" class="com.piedra.platease.model.system.User" />
        <![CDATA[
            SELECT u.* FROM SYS_USER u WHERE 1=1
            #if($userName)
                AND u.USER_NAME=:userName
            #end
            #if($idcard)
                AND u.IDCARD=:idcard
            #end
            #if($realName)
                AND u.REAL_NAME=:realName
            #end
            #if($password)
                AND u.PASSWORD=:password
            #end
            #if($deptId)
                AND u.DEPT_ID=:deptId
            #end
            #if($deptCode)
                AND u.DEPT_CODE=:deptCode
            #end
            #if($telphone)
                AND u.TELPHONE=:telphone
            #end
            #if($homeBgurl)
                AND u.HOME_BGURL=:homeBgurl
            #end
            #if($remark)
                AND u.REMARK=:remark
            #end
            #if($id)
                AND u.ID=:id
            #end
            #if($sidx)
                order by u.$sidx #if($sord) $sord #end
            #end
        ]]>
    </sql-query>
    <!-- 查询用户数据总量 -->
    <sql-query name="SysUser.queryUserListCnt">
        <return-scalar column="cnt" type="java.lang.Integer" />
        <![CDATA[
            SELECT COUNT(1) AS cnt FROM SYS_USER WHERE 1=1
            #if($userName)
                AND USER_NAME=:userName
            #end
            #if($idcard)
                AND IDCARD=:idcard
            #end
            #if($realName)
                AND REAL_NAME=:realName
            #end
            #if($password)
                AND PASSWORD=:password
            #end
            #if($deptId)
                AND DEPT_ID=:deptId
            #end
            #if($deptCode)
                AND DEPT_CODE=:deptCode
            #end
            #if($telphone)
                AND TELPHONE=:telphone
            #end
            #if($homeBgurl)
                AND HOME_BGURL=:homeBgurl
            #end
            #if($remark)
                AND REMARK=:remark
            #end
            #if($id)
                AND ID=:id
            #end
        ]]>
    </sql-query>

    <!-- 新增用户角色关联 -->
    <sql-query name="SysUser.addUserRole">
    <![CDATA[
        INSERT INTO sys_user_role(USER_ID, ROLE_ID) VALUES (:userId, :roleId)
    ]]>
    </sql-query>


    <!-- 删除用户角色关联 -->
    <sql-query name="SysUser.delUserRole">
    <![CDATA[
        DELETE FROM sys_user_role WHERE USER_ID=:userId AND ROLE_ID IN ( :roleIds )
    ]]>
    </sql-query>

    <!-- 删除用户角色关联 -->
    <sql-query name="SysUser.delUserRoleByUserId">
        <![CDATA[
            DELETE FROM sys_user_role WHERE USER_ID=:userId
        ]]>
    </sql-query>
</hibernate-mapping>